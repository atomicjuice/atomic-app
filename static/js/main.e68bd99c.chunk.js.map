{"version":3,"sources":["video/openshot-edit2.mp4","Components/UserSearch.js","Components/NavBar.js","Components/PlayerComparisonSearch.js","Components/PlayerComparison.js","Components/ClanSearch.js","Components/ClanStats.js","Components/PlayerList.js","Components/ClanList.js","Components/PlayerStats.js","Components/ClanComparisonSearch.js","Components/ClanComparison.js","Components/PlayerComparisonFromList.js","Components/ComparisonFromClanList.js","Components/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserSearch","renderPlayerStats","props","history","push","fetchUserInfo","id","fetch","apikey","then","resp","json","nickname","data","playerInfo","localStorage","setItem","JSON","stringify","console","log","setCurrentUser","handleSubmit","e","preventDefault","name","target","value","undefined","alert","account_id","className","onSubmit","this","type","placeholder","Component","withRouter","NavBar","ComparisonSearch","user","setPlayerTwoComparisonID","onChange","PlayerComparison","playerOneInfo","playerOneLocalStorage","getItem","parse","playerTwoInfo","playerTwoLocalStorage","state","playerOne","playerTwo","playerOneNickname","statistics","all","playerTwoNickname","playerOneAccuracy","hits","shots","playerTwoAccuracy","style","color","battles","wins","losses","frags","win_and_survived","toFixed","ClanSearch","clan","renderClanStats","fetchClanInfo","info","setState","setCurrentClan","ID","clan_id","ClanStats","clanLocalStorage","clanParsed","addToClanList","retreivedData","clanArray","setClanList","parsedClan","setClanOneComparisonID","comparisonFromClanList","creator_name","members_count","motto","recruiting_options","vehicles_level","wins_ratio","onClick","PlayerList","removePlayerFromList","playerList","playerListParsed","checkList","renderPlayerFromList","playersObject","players","Object","keys","map","ClanList","removeClanFromList","clanList","clanListParsed","renderClanFromList","clansObject","clans","PlayerStats","playerLocalStorage","playerParsed","player","addToPlayerList","playerArray","setPlayerList","parsedPlayer","setPlayerOneComparisonID","compareFromPlayerList","accuracy","ClanComparisonSearch","setClanTwoComparisonID","ClanComparison","ClanOneInfo","clanOneLocalStorage","ClanTwoInfo","clanTwoLocalStorage","clanOne","clanTwo","PlayerComparisonFromList","setPlayerTwoComparisonIDfromList","ComparisonFromClanList","setClanTwoComparisonIDfromList","HomeScreen","renderTitle","setTimeout","home","document","querySelector","p","createElement","innerText","appendChild","App","currentUser","currentUserID","currentPlayerInfo","playerToCompareInfo","playerToCompareNickname","playerOneID","playerTwoID","currentClanName","currentClanID","currentClanInfo","clanTocompareName","clanTocompareID","clanTocompareinfo","clanID","PlayerID","playerListFromLocalStorage","clanListFromLocalStorage","autoPlay","loop","muted","src","backgroundVideo","exact","path","render","PlayerComparisonSearch","Boolean","window","location","hostname","match","ReactDOM","StrictMode","component","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e68bd99c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/openshot-edit2.7990fc1c.mp4\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../Css/SearchStyle.css'\r\nimport '../App.css'\r\n\r\n\r\nclass UserSearch extends Component {\r\n\r\n\r\n  renderPlayerStats = () => {\r\n    this.props.history.push('/playerstats')\r\n  }\r\n\r\n  fetchUserInfo = (id) => {\r\n    fetch(`https://api.wotblitz.eu/wotb/account/info/?application_id=${this.props.apikey}&account_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const nickname = json.data[id].nickname\r\n        const playerInfo = json.data[id]\r\n        localStorage.setItem('currentPlayer', JSON.stringify(playerInfo))\r\n        console.log()\r\n        this.props.setCurrentUser(nickname, id, playerInfo)\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const name = e.target[0].value\r\n    fetch(`https://api.wotblitz.eu/wotb/account/list/?application_id=${this.props.apikey}&search=${name}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        if (json.data[0] === undefined) {\r\n          alert('Player Not Found')\r\n          this.props.history.push('/usersearch')\r\n        } else {\r\n          const id = json.data[0].account_id\r\n          this.fetchUserInfo(id)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p id='playerSearchContext'>Type in the name of the player you wish to scout</p>\r\n        <div className='searchBar'>\r\n          <form onSubmit={this.handleSubmit} >\r\n            <input name=\"nickname\" type=\"text\" placeholder=\"Insert Player Name\" className='input'></input>\r\n            <input type=\"submit\" value=\"Scout\" className='button' />\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UserSearch);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../Css/Nav.css'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    // <nav className='navigate'>\r\n\r\n    // </nav>\r\n    <div>\r\n      <nav className='navigate'>\r\n        <ul>\r\n          <li className='appName'><Link to='/' className='appName'>World of Tanks Blitz Data Scout</Link></li>\r\n          <li className='linkStyle'><Link to='/usersearch'>Player Search</Link></li>\r\n          <li className='linkStyle'><Link to='/clansearch'>Clan Search</Link></li>\r\n          <li className='linkStyle'><Link to='/playerlist'>Player List</Link></li>\r\n          <li className='linkStyle'><Link to='/clanlist'>Clan List</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../Css/SearchStyle.css'\r\n\r\nclass ComparisonSearch extends Component {\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    fetch(`https://api.wotblitz.eu/wotb/account/list/?application_id=${this.props.apikey}&search=${e.target[0].value}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        if (json.data[0] === undefined) {\r\n          alert('Player Not Found')\r\n        }\r\n          else{\r\n            const user = json.data[0]\r\n            this.props.setPlayerTwoComparisonID(user.nickname, user.account_id)\r\n          }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className='comparisonSearchContext'>Type in the name of the player you wish to compare with</p>\r\n        <div className='searchBar'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input onChange={this.onChange} name=\"nickname\" type=\"text\" placeholder=\"Insert Player Name\" className='input'></input>\r\n            <input type=\"submit\" value=\"Scout\" className='button' />\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComparisonSearch;\r\n","import React, { Component } from 'react';\r\nimport '../Css/PlayerComparison.css'\r\n\r\nclass PlayerComparison extends Component {\r\n\r\n  playerOneInfo = () => {\r\n    const playerOneLocalStorage = localStorage.getItem('currentPlayer')\r\n    const playerOneParsed = JSON.parse(playerOneLocalStorage)\r\n    return (playerOneParsed)\r\n  }\r\n\r\n  playerTwoInfo = () => {\r\n    const playerTwoLocalStorage = localStorage.getItem('comparisonPlayer')\r\n    const playerTwoParsed = JSON.parse(playerTwoLocalStorage)\r\n    return (playerTwoParsed)\r\n  }\r\n\r\n\r\n\r\n\r\n  state = {\r\n    playerOne: this.playerOneInfo(),\r\n    playerTwo: this.playerTwoInfo()\r\n  }\r\n\r\n  render() {\r\n    const playerOneNickname = this.state.playerOne.nickname\r\n    const playerOne = this.state.playerOne.statistics.all\r\n    const playerTwoNickname = this.state.playerTwo.nickname\r\n    const playerTwo = this.state.playerTwo.statistics.all\r\n    const playerOneAccuracy = playerOne.hits / playerOne.shots * 100\r\n    const playerTwoAccuracy = playerTwo.hits / playerTwo.shots * 100\r\n    return (\r\n      <div id='all'>\r\n        <p id='playerComparisonContextMaster'>Here are the players compared side by side. for quick reference,</p>\r\n        <p className='playerComparisonContext'> each player's stats have been colour coded to denote from a\r\n        glance which player has a higher or better stat,</p>\r\n        <p className='playerComparisonContext'>\r\n          <span style={{ color: \"green\" }} >Green is higher/better </span>\r\n         and <span style={{ color: \"red\" }}>red is lower/worse</span>\r\n         </p>\r\n        <div className='playerComparison'>\r\n          <div className='player1' >\r\n            <h1 style={{ color: 'blue' }}>{playerOneNickname}</h1>\r\n            <br />\r\n            <p className={playerOne.battles > playerTwo.battles ? 'green' : 'red'}>battles:{playerOne.battles}</p>\r\n            <p className={playerOne.wins > playerTwo.wins ? 'green' : 'red'}>wins:{playerOne.wins}</p>\r\n            <p className={playerOne.battles > playerTwo.battles ? 'green' : 'red'}>losses:{playerOne.losses}</p>\r\n            <p className={playerOne.battles > playerTwo.battles ? 'green' : 'red'}>destroyed:{playerOne.frags}</p>\r\n            <p className={playerOne.battles > playerTwo.battles ? 'green' : 'red'}>won and survived:{playerOne.win_and_survived}</p>\r\n            <p className={playerOneAccuracy > playerTwoAccuracy ? 'green' : 'red'}>accuracy:{playerOneAccuracy.toFixed(2)}%</p>\r\n          </div>\r\n\r\n          <div className='player2'>\r\n            <h1 style={{ color: 'orange' }}>{playerTwoNickname}</h1>\r\n            <br />\r\n            <p className={playerOne.battles < playerTwo.battles ? 'green' : 'red'}>battles:{playerTwo.battles}</p>\r\n            <p className={playerOne.wins < playerTwo.wins ? 'green' : 'red'}>wins:{playerTwo.wins}</p>\r\n            <p className={playerOne.battles < playerTwo.battles ? 'green' : 'red'}>losses:{playerTwo.losses}</p>\r\n            <p className={playerOne.battles < playerTwo.battles ? 'green' : 'red'}>destroyed:{playerTwo.frags}</p>\r\n            <p className={playerOne.battles < playerTwo.battles ? 'green' : 'red'}>won and survived:{playerTwo.win_and_survived}</p>\r\n            <p className={playerOneAccuracy < playerTwoAccuracy ? 'green' : 'red'}>accuracy:{playerTwoAccuracy.toFixed(2)}%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerComparison;\r\n","import React, { Component } from 'react';\r\nimport '../Css/SearchStyle.css';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass ClanSearch extends Component {\r\n\r\n  state = {\r\n    id: null,\r\n    clan: null\r\n  }\r\n\r\n\r\n  renderClanStats = () => {\r\n    this.props.history.push('/clanstats')\r\n  }\r\n\r\n  fetchClanInfo = (name, id) => {\r\n    fetch(`https://api.wotblitz.eu/wotb/clans/info/?application_id=${this.props.apikey}&clan_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[this.state.id]\r\n        localStorage.setItem('currentClan', JSON.stringify(info))\r\n        this.setState({\r\n          clan: info\r\n        })\r\n        this.props.setCurrentClan(name, id, info)\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const name = e.target[0].value\r\n    fetch(`https://api.wotblitz.eu/wotb/clans/list/?application_id=${this.props.apikey}&search=${name}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        if (json.data[0] === undefined) {\r\n          alert('Clan Not Found')\r\n        }\r\n        else {\r\n          const ID = json.data[0].clan_id\r\n          this.setState({\r\n            id: ID\r\n          })\r\n          this.fetchClanInfo(name, ID)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p id='clanSearchContext'>Type in the name of the clan you wish to scout</p>\r\n        <div className='searchBar'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input name=\"clanname\" type=\"text\" placeholder=\"Enter Clan Name\" className='input'></input>\r\n            <input type=\"submit\" value=\"Scout\" className='button' />\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ClanSearch);\r\n\r\n\r\n// if (!clans) {\r\n//   localStorage.setItem('clans', JSON.stringify({ [name] : ID }))\r\n// }\r\n// else {\r\n//   let retreivedData = localStorage.getItem('clans')\r\n//   let clanArray = JSON.parse(retreivedData)\r\n//   clanArray[name] = ID\r\n//   localStorage.setItem('clans', JSON.stringify(clanArray))\r\n//   console.log(localStorage)\r\n// }","import React, { Component } from 'react';\r\nimport '../Css/StatsStyle.css'\r\n\r\n\r\nclass ClanStats extends Component {\r\n\r\n  clanLocalStorage = (localStorage.getItem('currentClan'))\r\n  clanParsed = JSON.parse(this.clanLocalStorage)\r\n\r\n  state = {\r\n    clan: !this.props.clan ? this.clanParsed : this.props.clan\r\n  }\r\n\r\n  addToClanList = (name, id) => {\r\n    if (!localStorage.getItem('clanList')) {\r\n      localStorage.setItem('clanList', JSON.stringify({ [name]: id }))\r\n      const clan = localStorage.getItem('clanList')\r\n      const parsedClan = JSON.parse(clan)\r\n      this.props.setClanList(parsedClan)\r\n      alert('Clan Added To List')\r\n    }\r\n    else {\r\n      let retreivedData = localStorage.getItem('clanList')\r\n      let clanArray = JSON.parse(retreivedData)\r\n      clanArray[name] = id\r\n      localStorage.setItem('clanList', JSON.stringify(clanArray))\r\n      this.props.setClanList(clanArray)\r\n      alert('Clan Added To List')\r\n    }\r\n  }\r\n\r\n  setClanOneComparisonID = this.props.setClanOneComparisonID\r\n  comparisonFromClanList = this.props.comparisonFromClanList\r\n\r\n  render() {\r\n    const clan = this.state.clan\r\n    return (\r\n      <div className='clanStats'>\r\n        <div className='clanCard'>\r\n          <h1>Name: {clan.name}</h1>\r\n          <br />\r\n          <h2>Founder Name: {clan.creator_name}</h2>\r\n          <br />\r\n          <h2>Members Count: {clan.members_count}</h2>\r\n          <br />\r\n          <h2>Motto: {clan.motto} </h2>\r\n          <br />\r\n          <h2>Minimum tier vehicle to join: {clan.recruiting_options.vehicles_level}</h2>\r\n          <br />\r\n          <h2>Battles before you can join: {clan.recruiting_options.battles}</h2>\r\n          <br />\r\n          <h2>Minimum win/loss ratio needed to join: {clan.recruiting_options.wins_ratio} </h2>\r\n          <br />\r\n          <div className=\"buttons\">\r\n          <button className=\"CompareBySearch\" onClick={() => this.setClanOneComparisonID(clan.clan_id)}>Compare Clans By Search</button>\r\n          <button className=\"compareFromList\"onClick={() => this.comparisonFromClanList(clan.clan_id)} >+Compare With Clan From List</button>\r\n          <button className=\"addToList\" onClick={() => this.addToClanList(clan.name, clan.clan_id)}>+ Add To Clan List </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClanStats;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../Css/Lists.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass PlayerList extends Component {\r\n\r\n  removePlayerFromList = (name) => {\r\n    const playerList = localStorage.getItem('playerList')\r\n    const playerListParsed = JSON.parse(playerList)\r\n    delete playerListParsed[name]\r\n    localStorage.setItem('playerList', JSON.stringify(playerListParsed))\r\n    this.props.history.push('/playerList')\r\n  }\r\n\r\n  checkList = () => {\r\n    if (!localStorage.getItem('playerList') || localStorage.getItem('playerList') === \"{}\") {\r\n      return <h2>Your player list is empty, search players to add them to your list</h2>\r\n    } else {\r\n      const renderPlayerFromList = this.props.renderPlayerFromList\r\n      const playersObject = localStorage.getItem('playerList')\r\n      const players = JSON.parse(playersObject)\r\n      const playersNames = Object.keys(players)\r\n      const list = playersNames.map(name => <li className='itemContainer' ><button className='playerName' onClick={() => renderPlayerFromList(name)}>View: {name}</button>\r\n        <button className='removeButton' onClick={() => this.removePlayerFromList(name)} >Remove Player From List</button> </li>)\r\n      return list\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p className='listContextMaster'>\r\n          This list is where you can select to view any one of the players</p>\r\n          <p className='listContext' > which you previously decided to add to your list,</p>\r\n          <p className='listContext'> \r\n          or if you wish you can also remove a player from your list as well.\r\n        </p>\r\n        <div className='playerList'>\r\n        {this.checkList()}\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PlayerList);\r\n","import React, { Component } from 'react';\r\nimport '../Css/Lists.css'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nclass ClanList extends Component {\r\n\r\n  removeClanFromList = (name) => {\r\n    const clanList = localStorage.getItem('clanList')\r\n    const clanListParsed = JSON.parse(clanList)\r\n    delete clanListParsed[name]\r\n    localStorage.setItem('clanList', JSON.stringify(clanListParsed))\r\n    this.props.history.push('/clanList')\r\n  }\r\n\r\n  checkList = () => {\r\n    if (!localStorage.getItem('clanList') || localStorage.getItem('clanList') === \"{}\") {\r\n      return <h2>Your clan list is empty, search clans to add them to your list</h2>\r\n    } else {\r\n      const renderClanFromList = this.props.renderClanFromList\r\n      const clansObject = localStorage.getItem('clanList')\r\n      const clans = JSON.parse(clansObject)\r\n      const clanNames = Object.keys(clans)\r\n      const list = clanNames.map(name => <li className='itemContainer' ><button className='clanName' onClick={() => renderClanFromList(name)}>View: {name}</button>\r\n        <button className='removeButton' onClick={() => this.removeClanFromList(name)}>Remove Clan From List</button> </li>)\r\n      return list\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className='listContextMaster'>\r\n          This list is where you can select to view any one of the clans</p>\r\n        <p className='listContext' > which you previously decided to add to your list,</p>\r\n        <p className='listContext'>\r\n          or if you wish you can also remove a clan from your list as well.\r\n        </p>\r\n        <div className='clanList'>\r\n          {this.checkList()}\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ClanList);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../Css/StatsStyle.css'\r\n\r\nclass PlayerStats extends Component {\r\n\r\n  playerLocalStorage = (localStorage.getItem('currentPlayer'))\r\n  playerParsed = JSON.parse(this.playerLocalStorage)\r\n\r\n  state = {\r\n    player: !this.props.player ? this.playerParsed : this.props.player\r\n  }\r\n\r\n  addToPlayerList = (name, id) => {\r\n    if (!localStorage.getItem('playerList')) {\r\n      localStorage.setItem('playerList', JSON.stringify({ [name]: id }))\r\n      const player = localStorage.getItem('playerList')\r\n      const parsedPlayer = JSON.parse(player)\r\n      this.props.setPlayerList(parsedPlayer)\r\n      alert('Player Added To List')\r\n    }\r\n    else {\r\n      let retreivedData = localStorage.getItem('playerList')\r\n      let playerArray = JSON.parse(retreivedData)\r\n      playerArray[name] = id\r\n      localStorage.setItem('playerList', JSON.stringify(playerArray))\r\n      this.props.setPlayerList(playerArray)\r\n      alert('Player Added To List')\r\n    }\r\n  }\r\n\r\n  setPlayerOneComparisonID = this.props.setPlayerOneComparisonID\r\n  compareFromPlayerList = this.props.compareFromPlayerList\r\n\r\n\r\n  render() {\r\n    const player = this.state.player\r\n    const nickname = this.state.player.nickname\r\n    const info = player.statistics.all\r\n    const accuracy = info.hits / info.shots * 100\r\n    return (\r\n      <div className='playerStats'>\r\n        <div className='playerCard'>\r\n          <h1>Player name: {nickname}</h1>\r\n          <p>Battles: {info.battles}</p>\r\n          <br></br>\r\n          <p>Won: {info.wins}</p>\r\n          <br></br>\r\n          <p>Losses: {info.losses}</p>\r\n          <br></br>\r\n          <p>Won And Survived: {info.win_and_survived}</p>\r\n          <br></br>\r\n          <p>Destroyed: {info.frags}</p>\r\n          <br></br>\r\n          <p>Accuracy: {accuracy.toFixed(2)}%</p>\r\n          <br></br>\r\n          <div className='buttons'>\r\n            <button className=\"CompareBySearch\" onClick={() => this.setPlayerOneComparisonID(player.account_id)}>Compare Players By Search</button>\r\n            <button className=\"compareFromList\"onClick={() => this.compareFromPlayerList(player.account_id)}> Compare With <br></br>Player From List</button>         \r\n            <button className=\"addToList\" onClick={() => this.addToPlayerList(nickname, player.account_id)}>+ Add To <br></br> Player List</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PlayerStats);\r\n","import React, { Component } from 'react';\r\nimport '../Css/SearchStyle.css'\r\n\r\n\r\n\r\nclass ClanComparisonSearch extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const name = e.target[0].value\r\n    fetch(`https://api.wotblitz.eu/wotb/clans/list/?application_id=${this.props.apikey}&search=${name}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        if (json.data[0] === undefined) {\r\n          alert('Clan Not Found')\r\n        } else {\r\n          const ID = json.data[0].clan_id\r\n          this.setState({\r\n            id: ID\r\n          })\r\n          this.props.setClanTwoComparisonID(name, ID)\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className='comparisonSearchContext'>Type in the name of the clan you wish to compare with</p>\r\n        <div className='searchBar'>\r\n        <form onSubmit={this.handleSubmit} >\r\n          <input onChange={this.onChange} name=\"Clan\" type=\"text\" placeholder=\"Enter Clan Name\" className='input' ></input>\r\n          <input type=\"submit\" value=\"Scout\" className='button' />\r\n        </form>\r\n      </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClanComparisonSearch;\r\n","import React, { Component } from 'react';\r\nimport '../Css/ClanComparison.css'\r\n\r\nclass ClanComparison extends Component {\r\n\r\n  ClanOneInfo = () => {\r\n    const clanOneLocalStorage = localStorage.getItem('currentClan')\r\n    const clanOneParsed = JSON.parse(clanOneLocalStorage)\r\n    return (clanOneParsed)\r\n  }\r\n\r\n  ClanTwoInfo = () => {\r\n    const clanTwoLocalStorage = localStorage.getItem('comparisonClan')\r\n    const clanTwoParsed = JSON.parse(clanTwoLocalStorage)\r\n    return (clanTwoParsed)\r\n  }\r\n\r\n  state = {\r\n    clanOne: this.ClanOneInfo(),\r\n    clanTwo: this.ClanTwoInfo()\r\n  }\r\n\r\n\r\n  render() {\r\n    const clanOne = this.state.clanOne\r\n    const clanTwo = this.state.clanTwo\r\n    return (\r\n      <div >\r\n        <p id='playerComparisonContextMaster'>Here are the clans compared side by side. for quick reference,</p>\r\n        <p className='playerComparisonContext'> each clan's stats have been colour coded to denote from a\r\n        glance which clan has a higher or better stat,</p>\r\n        <p className='playerComparisonContext'>\r\n          <span style={{ color: \"green\" }} >Green is higher/better </span>\r\n         and <span style={{ color: \"red\" }}>red is lower/worse</span>\r\n        </p>\r\n        <div className='clanComparison'>\r\n        {console.log(clanTwo)}\r\n        <div className='clanOneCard'>\r\n          <h1 className='clanOneTitle'>{clanOne.name}</h1>\r\n          <h4 className='motto'>Motto: {clanOne.motto}</h4>\r\n          <h2>Founder Name: {clanOne.creator_name}</h2>\r\n          <p className={clanOne.members_count > clanTwo.members_count ? 'green' : 'red'}>Members Count: {clanOne.members_count}</p>\r\n          <p className={clanOne.recruiting_options.vehicles_level > clanTwo.recruiting_options.vehicles_level ? 'green' : 'red'}>Minimum tier vehicle to join: {clanOne.recruiting_options.vehicles_level}</p>\r\n          <p className={clanOne.recruiting_options.battles > clanTwo.recruiting_options.battles ? 'green' : 'red'}>Battles before you can join: {clanOne.recruiting_options.battles}</p>\r\n          <p className={clanOne.recruiting_options.wins_ratio >= clanTwo.recruiting_options.wins_ratio ? 'green' : 'red'}>Minimum win/loss ratio needed to join: {clanOne.recruiting_options.wins_ratio}</p>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className='clanTwoCard'>\r\n          <h1 className='clanTwoTitle'>{clanTwo.name}</h1>\r\n          <h4 className='motto'>Motto: {clanTwo.motto}</h4>\r\n          <h2>Founder Name: {clanTwo.creator_name}</h2>\r\n          <p className={clanOne.members_count < clanTwo.members_count ? 'green' : 'red'}>Members Count: {clanTwo.members_count}</p>\r\n          <p className={clanOne.recruiting_options.vehicles_level < clanTwo.recruiting_options.vehicles_level ? 'green' : 'red'}>Minimum tier vehicle to join: {clanTwo.recruiting_options.vehicles_level}</p>\r\n          <p className={clanOne.recruiting_options.battles < clanTwo.recruiting_options.battles ? 'green' : 'red'}>Battles before you can join: {clanTwo.recruiting_options.battles}</p>\r\n          <p className={clanOne.recruiting_options.wins_ratio <= clanTwo.recruiting_options.wins_ratio ? 'green' : 'red'}>Minimum win/loss ratio needed to join: {clanTwo.recruiting_options.wins_ratio}</p>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClanComparison;\r\n","import React, { Component } from 'react';\r\nimport '../Css/Lists.css'\r\n\r\n\r\nclass PlayerComparisonFromList extends Component {\r\n\r\n  checkList = () => {\r\n    if (!localStorage.getItem('playerList')) {\r\n      return <h2>Your player list is empty, search players to add them to your list</h2>\r\n    }else{\r\n      const setPlayerTwoComparisonIDfromList = this.props.setPlayerTwoComparisonIDfromList\r\n      const playersObject = localStorage.getItem('playerList')\r\n      const players = JSON.parse(playersObject)\r\n      const playersNames = Object.keys(players)\r\n      const list = playersNames.map(name => <li className='itemContainer'><button className='playerNameComparison' onClick={() => setPlayerTwoComparisonIDfromList(name)}>Compare With: {name}</button></li>)\r\n      return list\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className='playerList'>\r\n        <p className='selectFromListContext'>Select a Player you wish to compare with</p>\r\n        {this.checkList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerComparisonFromList;\r\n","import React, { Component } from 'react';\r\nimport '../Css/Lists.css'\r\n\r\n\r\nclass ComparisonFromClanList extends Component {\r\n\r\n\r\n  checkList = () => {\r\n    if (!localStorage.getItem('clanList')) {\r\n      return <h2>Your clan list is empty, search clans to add them to your list</h2>\r\n    }else{\r\n      const setClanTwoComparisonIDfromList = this.props.setClanTwoComparisonIDfromList\r\n      const clansObject = localStorage.getItem('clanList')\r\n      const clans = JSON.parse(clansObject)\r\n      const clanNames = Object.keys(clans)\r\n      const list = clanNames.map(name => <li className='itemContainer'><button className='clanNameComparison' onClick={() => setClanTwoComparisonIDfromList(name)}> Compare With: {name}</button></li> )\r\n      return list\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='clanList'>\r\n        <p className='selectFromListContext'>Select a Player you wish to compare with</p>\r\n        {this.checkList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComparisonFromClanList;","import React, { Component } from 'react';\r\nimport '../Css/HomeScreen.css'\r\n\r\nclass HomeScreen extends Component {\r\n\r\n    renderTitle = () => {\r\n\r\n       return <p id='title'>World of Tanks Blitz Data Scout</p>\r\n    }\r\n\r\n    componentDidMount () {\r\n        setTimeout(() =>{\r\n            const home = document.querySelector('#home')\r\n            let p = document.createElement('p')\r\n            p.id = 'title'\r\n            p.innerText = 'World of Tanks Blitz Data Scout'\r\n            home.appendChild(p)\r\n        }, 2000)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='home'>\r\n                <h1 className='context'>Welcome to..</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default HomeScreen;\r\n","import './App.css'  \r\nimport { Route } from 'react-router-dom'\r\nimport UserSearch from './Components/UserSearch';\r\nimport NavBar from './Components/NavBar'\r\nimport PlayerComparisonSearch from './Components/PlayerComparisonSearch'\r\nimport PlayerComparison from './Components/PlayerComparison'\r\nimport { withRouter } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\nimport ClanSearch from './Components/ClanSearch';\r\nimport ClanStats from './Components/ClanStats'\r\nimport PlayerList from './Components/PlayerList'\r\nimport ClanList from './Components/ClanList';\r\nimport PlayerStats from './Components/PlayerStats'\r\nimport ClanComparisonSearch from './Components/ClanComparisonSearch'\r\nimport ClanComparison from './Components/ClanComparison'\r\nimport PlayerComparisonFromList from './Components/PlayerComparisonFromList'\r\nimport ComparisonFromClanList from './Components/ComparisonFromClanList'\r\nimport backgroundVideo from './video/openshot-edit2.mp4'\r\nimport HomeScreen from './Components/HomeScreen'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    apikey: \"f2e055f4250f8cb83b5ada0a424e3f8c\",\r\n    currentUser: null,\r\n    currentUserID: null,\r\n    currentPlayerInfo: null,\r\n    playerToCompareInfo: null,\r\n    playerToCompareNickname: null,\r\n    playerOneID: null,\r\n    playerTwoID: null,\r\n    playerList: null,\r\n    clanList: null,\r\n    currentClanName: null,\r\n    currentClanID: null,\r\n    currentClanInfo: null,\r\n    clanTocompareName: null,\r\n    clanTocompareID: null,\r\n    clanTocompareinfo: null,\r\n  }\r\n\r\n  setClanList = (clans) => {\r\n    this.setState({\r\n      clanList: clans\r\n    })\r\n  }\r\n\r\n  setPlayerList = (players) => {\r\n    this.setState({\r\n      playerList: players\r\n    })\r\n  }\r\n\r\n  setCurrentClan = (name, ID, info) => {\r\n    this.setState({\r\n      currentClanName: name,\r\n      currentClanID: ID,\r\n      currentClanInfo: info\r\n    })\r\n    this.props.history.push('/clanstats')\r\n  }\r\n\r\n  setCurrentUser = (nickname, ID, info) => {\r\n    this.setState({\r\n      currentUser: nickname,\r\n      currentUserID: ID,\r\n      currentPlayerInfo: info,\r\n    })\r\n    this.props.history.push('/playerstats')\r\n  }\r\n\r\n  setClanTwoComparisonIDfromList = name => {\r\n\r\n    const clanList = localStorage.getItem('clanList')\r\n    const clanListParsed = JSON.parse(clanList)\r\n    const clanID = clanListParsed[name]\r\n    \r\n    fetch(`https://api.wotblitz.eu/wotb/clans/info/?application_id=${this.state.apikey}&clan_id=${clanID}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[clanID]\r\n        localStorage.setItem('comparisonClan', JSON.stringify(info))\r\n        this.setState({\r\n          clanTocompareinfo: info\r\n        })\r\n        this.props.history.push('/clancomparison')\r\n      })\r\n  }\r\n\r\n  setPlayerTwoComparisonIDfromList = (nickname) => {\r\n    const playerList = localStorage.getItem('playerList')\r\n    const playerListParsed = JSON.parse(playerList)\r\n    const PlayerID = playerListParsed[nickname]\r\n    fetch(`https://api.wotblitz.eu/wotb/account/info/?application_id=${this.state.apikey}&account_id=${PlayerID}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[PlayerID]\r\n        this.setState({\r\n          playerToCompareInfo: info\r\n        })\r\n        localStorage.setItem('comparisonPlayer', JSON.stringify(info))\r\n        this.props.history.push('/PlayerComparison')\r\n      })\r\n    }\r\n\r\n  setPlayerTwoComparisonID = (nickname, id) => {\r\n    this.setState({\r\n      playerToCompareNickname: nickname,\r\n      playerTwoID: id,\r\n    })\r\n    fetch(`https://api.wotblitz.eu/wotb/account/info/?application_id=${this.state.apikey}&account_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[id]\r\n        this.setState({\r\n          playerToCompareInfo: info\r\n        })\r\n        localStorage.setItem('comparisonPlayer', JSON.stringify(info))\r\n        this.props.history.push('/PlayerComparison')\r\n      })\r\n  }\r\n\r\n  compareFromPlayerList = id => {\r\n    this.setState({\r\n      playerOneID: id\r\n    })\r\n    this.props.history.push('/playerComparisonFromList')\r\n  }\r\n\r\n  comparisonFromClanList = id => {\r\n    this.setState({\r\n      playerOneID: id\r\n    })\r\n    this.props.history.push('/comparisonFromClanList')\r\n  }\r\n\r\n  setClanOneComparisonID = id => {\r\n    this.setState({\r\n      clanTocompareID: id\r\n    })\r\n    this.props.history.push('/clanListForComparison')\r\n  }\r\n\r\n  setPlayerOneComparisonID = id => {\r\n    this.setState({\r\n      playerOneID: id\r\n    })\r\n    this.props.history.push('/playerComparisonSearch')\r\n  }\r\n\r\n  setClanOneComparisonID = id => {\r\n    this.setState({\r\n      clanTocompareID: id\r\n    })\r\n    this.props.history.push('/ClanComparisonSearch')\r\n  }\r\n\r\n  setClanTwoComparisonID = (name, id) => {\r\n    fetch(`https://api.wotblitz.eu/wotb/clans/info/?application_id=${this.state.apikey}&clan_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[id]\r\n        localStorage.setItem('comparisonClan', JSON.stringify(info))\r\n        this.setState({\r\n          clanTocompareinfo: info\r\n        })\r\n        this.props.history.push('/clancomparison')\r\n      })\r\n  }\r\n\r\n  renderPlayerFromList = (name) => {\r\n    const playerListFromLocalStorage = localStorage.getItem('playerList')\r\n    const playerListParsed = JSON.parse(playerListFromLocalStorage)\r\n    const id = playerListParsed[name]\r\n    fetch(`https://api.wotblitz.eu/wotb/account/info/?application_id=${this.state.apikey}&account_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[id]\r\n        localStorage.setItem('currentPlayer', JSON.stringify(info))\r\n        this.setCurrentUser(name, id, info)\r\n      })\r\n  }\r\n\r\n  renderClanFromList = (name) => {\r\n    const clanListFromLocalStorage = localStorage.getItem('clanList')\r\n    const clanListParsed = JSON.parse(clanListFromLocalStorage)\r\n    const id = clanListParsed[name]\r\n    console.log([name])\r\n    fetch(`https://api.wotblitz.eu/wotb/clans/info/?application_id=${this.state.apikey}&clan_id=${id}`)\r\n      .then(resp => resp.json())\r\n      .then(json => {\r\n        const info = json.data[id]\r\n        localStorage.setItem('currentClan', JSON.stringify(info))\r\n        console.log(json)\r\n        this.setCurrentClan(name, id, info)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container mainBackground'>\r\n        <NavBar />\r\n        <video autoPlay loop muted id=\"video\">\r\n          <source src={backgroundVideo} type=\"video/mp4\" />\r\n        </video>\r\n        <Route exact path=\"/\" render={() => <HomeScreen/> } ></Route>\r\n        <Route exact path=\"/comparisonFromClanList\" render={() => <ComparisonFromClanList setClanTwoComparisonIDfromList={this.setClanTwoComparisonIDfromList} />}></Route>\r\n        <Route exact path=\"/playerComparisonFromList\" render={() => <PlayerComparisonFromList setPlayerTwoComparisonIDfromList={this.setPlayerTwoComparisonIDfromList}/>}></Route>\r\n        <Route exact path=\"/usersearch\" render={() => <UserSearch setCurrentUser={this.setCurrentUser} apikey={this.state.apikey} />}></Route>\r\n        <Route exact path=\"/clansearch\" render={() => <ClanSearch setCurrentClan={this.setCurrentClan} apikey={this.state.apikey} />}></Route>\r\n        <Route exact path=\"/playerstats\" render={() => <PlayerStats setPlayerList={this.setPlayerList} player={this.state.currentPlayerInfo} setPlayerOneComparisonID={this.setPlayerOneComparisonID} compareFromPlayerList={this.compareFromPlayerList} />}></Route>\r\n        <Route exact path=\"/clanstats\" render={() => <ClanStats clan={this.state.currentClanInfo} setClanList={this.setClanList} setClanOneComparisonID={this.setClanOneComparisonID} comparisonFromClanList={this.comparisonFromClanList} />}></Route>\r\n        <Route exact path=\"/playerlist\" render={() => <PlayerList renderPlayerFromList={this.renderPlayerFromList} />} />\r\n        <Route exact path=\"/clanlist\" render={() => <ClanList renderClanFromList={this.renderClanFromList} />} />\r\n        <Route exact path=\"/playerComparison\" render={() => <PlayerComparison currentPlayerInfo={this.state.currentPlayerInfo} playerToCompareInfo={this.state.playerToCompareInfo} />}></Route>\r\n        <Route exact path=\"/playerComparisonSearch\" render={() => <PlayerComparisonSearch setPlayerTwoComparisonID={this.setPlayerTwoComparisonID} apikey={this.state.apikey} />}></Route>\r\n        <Route exact path=\"/clancomparisonsearch\" render={() => <ClanComparisonSearch apikey={this.state.apikey} setClanTwoComparisonID={this.setClanTwoComparisonID} />} />\r\n        <Route exact path=\"/clancomparison\" render={() => <ClanComparison currentClanInfo={this.state.currentClanInfo} clanTocompareinfo={this.state.clanTocompareinfo} />}></Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, BrowserRouter as Router} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  \r\n    <React.StrictMode>\r\n      <Router>\r\n        <Route path=\"/\" component={App} />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}